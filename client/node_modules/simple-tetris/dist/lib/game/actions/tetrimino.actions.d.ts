import { IAction } from '../simple-redux';
export declare const INIT_NEW = "INIT_NEW";
export declare const MOVE_DOWN = "MOVE_DOWN";
export declare const MOVE_LEFT = "MOVE_LEFT";
export declare const MOVE_RIGHT = "MOVE_RIGHT";
export declare const ROTATE = "ROTATE";
export declare class InitNewAction implements IAction {
    payload: {
        index: number;
        matrixSizeX: number;
    };
    readonly type = "INIT_NEW";
    constructor(payload: {
        index: number;
        matrixSizeX: number;
    });
}
export declare class MoveDownAction implements IAction {
    payload: {
        offsetY: number;
    };
    readonly type = "MOVE_DOWN";
    constructor(payload: {
        offsetY: number;
    });
}
export declare class MoveLeftAction implements IAction {
    readonly type = "MOVE_LEFT";
}
export declare class MoveRightAction implements IAction {
    readonly type = "MOVE_RIGHT";
}
export declare class RotateAction implements IAction {
    readonly type = "ROTATE";
}
export declare type TetriminoActionsUnion = InitNewAction | MoveDownAction | MoveLeftAction | MoveRightAction | RotateAction;
